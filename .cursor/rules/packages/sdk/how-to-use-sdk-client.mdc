---
description: How to utilize the API SDK client
globs: 
alwaysApply: false
---
# General
* The client is made utilizing the Hono.js helper
* Located in [client.ts](mdc:apps/api/src/client.ts)

# How to generate
1. Import the client: 
    * Done via:
    ```js 
    import { client } from "@fundlevel/sdk"
    ```

2. Get the backend API url from env
    *   ```js
        import { env } from "@fundlevel/web/env" // Or where ever else

        env.NEXT_PUBLIC_BACKEND_URL
        ```
3. Get the bearer auth token from Clerk
    * i.e. using `AuthProvider` (in client components that DO NOT REFETCH - tokens have short lifetime)
    ```js
    import { useAuth } from "@fundlevel/web/components/providers/auth-provider";

    const { authToken } = useAuth();
    if (!authToken) {
        // User is unauthenticated
    }
    ```
    * i.e. using a server action (in async environments)
    ```js
    import { getTokenCached} from "@fundlevel/web/actions/auth";
    
    const authToken = await getTokenCached();
    if (!authToken) {
        // User is unauthenticated
    }
    ```
    * i.e. using clerk directly (strongly avoid)
    ```js
    import { auth } from "@clerk/nextjs/server";
    
    const { getToken } = await auth();
    const authToken = await getToken();
    if (!authToken) {
        // User is unauthenticated
    }

    return authToken;
    ```

4. Generate a sdk instance:
    *   ```js
        import { client } from "@fundlevel/sdk"

        const sdk = client(env.NEXT_PUBLIC_BACKEND_URL, authToken);
        ```

# How to use
* Routes are defined in the `@fundlevel/api/internal/server/*/routes.ts`, this is how paths are defined