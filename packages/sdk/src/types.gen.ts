// This file is auto-generated by @hey-api/openapi-ts

export type Account = {
  created_at: string;
  deleted_at: string | null;
  first_name: string;
  id: number;
  last_name: string;
  updated_at: string | null;
  user_id: string;
};

export type Business = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  business_colour: string;
  business_legal_section: BusinessLegalSection;
  business_legal_section_id?: number | null;
  created_at: string;
  deleted_at: string | null;
  display_name: string;
  employee_count?:
    | "1"
    | "2-10"
    | "11-50"
    | "51-200"
    | "201-500"
    | "501-1000"
    | "1000+";
  founding_date: string;
  id: number;
  industries: Array<Industry> | null;
  stripe_account: BusinessStripeAccount;
  updated_at: string | null;
};

export type BusinessLegalSection = {
  business_number: string;
  created_at: string;
  id: number;
  updated_at: string | null;
};

export type BusinessMemberRole = {
  description: string;
  id: number;
  name: string;
  permissions: Array<RolePermission> | null;
};

export type BusinessMemberWithRoleNameAndAccount = {
  account: SafeAccount;
  account_id: number;
  business_id: number;
  created_at: string;
  deleted_at: string | null;
  role: string;
  role_id: number;
  updated_at: string | null;
};

export type BusinessParams = {
  business_colour?: string | null;
  display_name: string;
  employee_count:
    | "1"
    | "2-10"
    | "11-50"
    | "51-200"
    | "201-500"
    | "501-1000"
    | "1000+";
  founding_date: string;
};

export type BusinessStripeAccount = {
  business_id: number;
  created_at: string;
  deleted_at: string | null;
  stripe_connected_account_id: string;
  stripe_disabled_reason: string | null;
  stripe_payouts_enabled: boolean;
  stripe_transfers_enabled: boolean;
  updated_at: string | null;
};

export type CreateAccountParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  first_name: string;
  last_name: string;
};

export type CreateBusinessParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  business: BusinessParams;
  industry_ids?: Array<number> | null;
};

export type CreateInvestmentParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  requires_manual_approval: boolean;
  round_id: number;
  share_quantity: number;
  status:
    | "awaiting_term_acceptance"
    | "awaiting_payment"
    | "investor_tasks_completed"
    | "failed_to_accept_terms"
    | "failed_to_make_payment"
    | "investor_withdrew"
    | "business_rejected"
    | "round_closed_before_investor_tasks_completed";
};

export type CreateRoundParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  business_id: number;
  description: string;
  price_per_share_usd_cents: number;
  total_business_shares: number;
  total_shares_for_sale: number;
};

export type ErrorDetail = {
  /**
   * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
   */
  location?: string;
  /**
   * Error message text
   */
  message?: string;
  /**
   * The value at the given location
   */
  value?: unknown;
};

export type ErrorModel = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  /**
   * A human-readable explanation specific to this occurrence of the problem.
   */
  detail?: string;
  /**
   * Optional list of individual error details
   */
  errors?: Array<ErrorDetail> | null;
  /**
   * A URI reference that identifies the specific occurrence of the problem.
   */
  instance?: string;
  /**
   * HTTP status code
   */
  status?: number;
  /**
   * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
   */
  title?: string;
  /**
   * A URI reference to human-readable documentation for the error.
   */
  type?: string;
};

export type FundingOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  message: string;
  totalFunding: number;
};

export type GetAllIndustriesResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  industries: Array<Industry> | null;
  message: string;
};

export type GetAllMemberRolesOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  message: string;
  roles: Array<BusinessMemberRole> | null;
};

export type GetBusinessesOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  businesses: Array<Business> | null;
  message: string;
};

export type GetCursorPaginatedInvestmentsOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  hasMore: boolean;
  investments: Array<Investment> | null;
  message: string;
  nextCursor: number | null;
};

export type GetCursorPaginatedRoundsOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  hasMore: boolean;
  message: string;
  nextCursor: number | null;
  rounds: Array<Round> | null;
};

export type GetInvestmentActivePaymentOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  investmentPayment: InvestmentPayment;
  message: string;
};

export type GetInvestmentPaymentsOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  investmentPayments: Array<InvestmentPayment> | null;
  message: string;
};

export type GetLikeCountOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  count: number;
  message: string;
};

export type GetOffsetPaginatedBusinessMembersOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  hasMore: boolean;
  members: Array<BusinessMemberWithRoleNameAndAccount> | null;
  message: string;
  total: number;
};

export type GetOffsetPaginatedInvestmentsOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  hasMore: boolean;
  investments: Array<Investment> | null;
  message: string;
  total: number;
};

export type GetOffsetPaginatedRoundsOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  hasMore: boolean;
  message: string;
  rounds: Array<Round> | null;
  total: number;
};

export type GetRoundCreateRequirementsOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  message: string;
  requirements: RoundCreateRequirements;
};

export type GetStripeAccountOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  message: string;
  stripeAccount: BusinessStripeAccount;
};

export type ImpressionCountOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  count: number;
  message: string;
};

export type Industry = {
  created_at: string;
  deleted_at: string | null;
  id: number;
  label: string;
  updated_at: string | null;
};

export type Investment = {
  approved_at?: string;
  completed_at?: string;
  created_at: string;
  deleted_at: string | null;
  id: number;
  investor_id: number;
  payment_completed_at?: string;
  payments?: Array<InvestmentPayment> | null;
  requires_manual_approval: boolean;
  round_id: number;
  share_quantity: number;
  status:
    | "awaiting_term_acceptance"
    | "awaiting_payment"
    | "investor_tasks_completed"
    | "failed_to_accept_terms"
    | "failed_to_make_payment"
    | "investor_withdrew"
    | "business_rejected"
    | "round_closed_before_investor_tasks_completed";
  terms_completed_at?: string;
  updated_at: string | null;
};

export type InvestmentPayment = {
  created_at: string;
  deleted_at: string | null;
  id: number;
  investment_id: number;
  status:
    | "cancelled"
    | "processing"
    | "requires_action"
    | "requires_capture"
    | "requires_confirmation"
    | "requires_payment_method"
    | "succeeded";
  stripe_payment_intent_client_secret: string;
  stripe_payment_intent_id: string;
  updated_at: string | null;
};

export type InvestmentPaymentIntentClientSecretOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  clientSecret: string;
  message: string;
};

export type IsFavouritedOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  favourited: boolean;
  message: string;
};

export type MessageResponse = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  message: string;
};

export type OnboardStripeConnectedAccountInputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  refreshURL: string;
  returnURL: string;
};

export type RolePermission = {
  description: string;
  id: number;
  value: string;
};

export type Round = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  business_id: number;
  created_at: string;
  deleted_at: string | null;
  description: string;
  id: number;
  price_per_share_usd_cents: number;
  status: "active" | "successful" | "failed";
  total_business_shares: number;
  total_shares_for_sale: number;
  updated_at: string | null;
};

export type RoundCreateRequirements = {
  has_active_status: boolean;
  legal_section: boolean;
  stripe_account: boolean;
};

export type SafeAccount = {
  created_at: string;
  deleted_at: string | null;
  first_name: string;
  id: number;
  last_name: string;
  updated_at: string | null;
};

export type SingleAccountResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  account: Account;
  message: string;
};

export type SingleBusinessResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  business: Business;
  message: string;
};

export type SingleInvestmentResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  investment: Investment;
  message: string;
};

export type UrlOutputBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  message: string;
  url: string;
};

export type UpdateAccountParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  first_name: string;
  last_name: string;
};

export type UpsertBusinessLegalSectionParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  business_number: string;
};

export type GetAccountData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/account";
};

export type GetAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetAccountError = GetAccountErrors[keyof GetAccountErrors];

export type GetAccountResponses = {
  /**
   * OK
   */
  200: SingleAccountResponseBody;
};

export type GetAccountResponse = GetAccountResponses[keyof GetAccountResponses];

export type CreateAccountData = {
  body: CreateAccountParams;
  path?: never;
  query?: never;
  url: "/account";
};

export type CreateAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateAccountError = CreateAccountErrors[keyof CreateAccountErrors];

export type CreateAccountResponses = {
  /**
   * Created
   */
  201: unknown;
};

export type DeleteAccountData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/account/{id}";
};

export type DeleteAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type DeleteAccountError = DeleteAccountErrors[keyof DeleteAccountErrors];

export type DeleteAccountResponses = {
  /**
   * No Content
   */
  204: void;
};

export type DeleteAccountResponse =
  DeleteAccountResponses[keyof DeleteAccountResponses];

export type UpdateAccountData = {
  body: UpdateAccountParams;
  path?: never;
  query?: never;
  url: "/account/{id}";
};

export type UpdateAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type UpdateAccountError = UpdateAccountErrors[keyof UpdateAccountErrors];

export type UpdateAccountResponses = {
  /**
   * No Content
   */
  204: void;
};

export type UpdateAccountResponse =
  UpdateAccountResponses[keyof UpdateAccountResponses];

export type GetAccountBusinessesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/account/{id}/businesses";
};

export type GetAccountBusinessesErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetAccountBusinessesError =
  GetAccountBusinessesErrors[keyof GetAccountBusinessesErrors];

export type GetAccountBusinessesResponses = {
  /**
   * OK
   */
  200: GetBusinessesOutputBody;
};

export type GetAccountBusinessesResponse =
  GetAccountBusinessesResponses[keyof GetAccountBusinessesResponses];

export type GetAccountInvestmentsByCursorData = {
  body?: never;
  path?: never;
  query?: {
    cursor?: number;
    limit?: number;
    status?: Array<
      | "awaiting_term_acceptance"
      | "awaiting_payment"
      | "investor_tasks_completed"
      | "failed_to_accept_terms"
      | "failed_to_make_payment"
      | "investor_withdrew"
      | "business_rejected"
      | "round_closed_before_investor_tasks_completed"
    > | null;
    sort_by?: "created_at";
    sort_order?: "asc" | "desc";
  };
  url: "/account/{id}/investments";
};

export type GetAccountInvestmentsByCursorErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetAccountInvestmentsByCursorError =
  GetAccountInvestmentsByCursorErrors[keyof GetAccountInvestmentsByCursorErrors];

export type GetAccountInvestmentsByCursorResponses = {
  /**
   * OK
   */
  200: GetCursorPaginatedInvestmentsOutputBody;
};

export type GetAccountInvestmentsByCursorResponse =
  GetAccountInvestmentsByCursorResponses[keyof GetAccountInvestmentsByCursorResponses];

export type GetAccountInvestmentsByPageData = {
  body?: never;
  path?: never;
  query?: {
    page?: number;
    pageSize?: number;
    status?: Array<
      | "awaiting_term_acceptance"
      | "awaiting_payment"
      | "investor_tasks_completed"
      | "failed_to_accept_terms"
      | "failed_to_make_payment"
      | "investor_withdrew"
      | "business_rejected"
      | "round_closed_before_investor_tasks_completed"
    > | null;
    sort_by?: "created_at";
    sort_order?: "asc" | "desc";
  };
  url: "/account/{id}/investments/page";
};

export type GetAccountInvestmentsByPageErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetAccountInvestmentsByPageError =
  GetAccountInvestmentsByPageErrors[keyof GetAccountInvestmentsByPageErrors];

export type GetAccountInvestmentsByPageResponses = {
  /**
   * OK
   */
  200: GetOffsetPaginatedInvestmentsOutputBody;
};

export type GetAccountInvestmentsByPageResponse =
  GetAccountInvestmentsByPageResponses[keyof GetAccountInvestmentsByPageResponses];

export type CreateBusinessImpressionData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/analytic/businesses/impressions";
};

export type CreateBusinessImpressionErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateBusinessImpressionError =
  CreateBusinessImpressionErrors[keyof CreateBusinessImpressionErrors];

export type CreateBusinessImpressionResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type CreateBusinessImpressionResponse =
  CreateBusinessImpressionResponses[keyof CreateBusinessImpressionResponses];

export type DeleteBusinessFavouriteData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/businesses/{id}/favourite";
};

export type DeleteBusinessFavouriteErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type DeleteBusinessFavouriteError =
  DeleteBusinessFavouriteErrors[keyof DeleteBusinessFavouriteErrors];

export type DeleteBusinessFavouriteResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type DeleteBusinessFavouriteResponse =
  DeleteBusinessFavouriteResponses[keyof DeleteBusinessFavouriteResponses];

export type GetBusinessFavouriteStatusData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/businesses/{id}/favourite";
};

export type GetBusinessFavouriteStatusErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessFavouriteStatusError =
  GetBusinessFavouriteStatusErrors[keyof GetBusinessFavouriteStatusErrors];

export type GetBusinessFavouriteStatusResponses = {
  /**
   * OK
   */
  200: IsFavouritedOutputBody;
};

export type GetBusinessFavouriteStatusResponse =
  GetBusinessFavouriteStatusResponses[keyof GetBusinessFavouriteStatusResponses];

export type CreateBusinessFavouriteData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/businesses/{id}/favourite";
};

export type CreateBusinessFavouriteErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateBusinessFavouriteError =
  CreateBusinessFavouriteErrors[keyof CreateBusinessFavouriteErrors];

export type CreateBusinessFavouriteResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type CreateBusinessFavouriteResponse =
  CreateBusinessFavouriteResponses[keyof CreateBusinessFavouriteResponses];

export type GetBusinessFavouriteCountData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/businesses/{id}/favourites";
};

export type GetBusinessFavouriteCountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessFavouriteCountError =
  GetBusinessFavouriteCountErrors[keyof GetBusinessFavouriteCountErrors];

export type GetBusinessFavouriteCountResponses = {
  /**
   * OK
   */
  200: GetLikeCountOutputBody;
};

export type GetBusinessFavouriteCountResponse =
  GetBusinessFavouriteCountResponses[keyof GetBusinessFavouriteCountResponses];

export type GetBusinessImpressionCountData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/businesses/{id}/impressions";
};

export type GetBusinessImpressionCountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessImpressionCountError =
  GetBusinessImpressionCountErrors[keyof GetBusinessImpressionCountErrors];

export type GetBusinessImpressionCountResponses = {
  /**
   * OK
   */
  200: ImpressionCountOutputBody;
};

export type GetBusinessImpressionCountResponse =
  GetBusinessImpressionCountResponses[keyof GetBusinessImpressionCountResponses];

export type CreateRoundFavouriteData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/rounds/favourites";
};

export type CreateRoundFavouriteErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateRoundFavouriteError =
  CreateRoundFavouriteErrors[keyof CreateRoundFavouriteErrors];

export type CreateRoundFavouriteResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type CreateRoundFavouriteResponse =
  CreateRoundFavouriteResponses[keyof CreateRoundFavouriteResponses];

export type CreateRoundImpressionData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/analytic/rounds/impressions";
};

export type CreateRoundImpressionErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateRoundImpressionError =
  CreateRoundImpressionErrors[keyof CreateRoundImpressionErrors];

export type CreateRoundImpressionResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type CreateRoundImpressionResponse =
  CreateRoundImpressionResponses[keyof CreateRoundImpressionResponses];

export type DeleteRoundFavouriteData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/rounds/{id}/favourite";
};

export type DeleteRoundFavouriteErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type DeleteRoundFavouriteError =
  DeleteRoundFavouriteErrors[keyof DeleteRoundFavouriteErrors];

export type DeleteRoundFavouriteResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type DeleteRoundFavouriteResponse =
  DeleteRoundFavouriteResponses[keyof DeleteRoundFavouriteResponses];

export type GetRoundFavouriteStatusData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/rounds/{id}/favourite";
};

export type GetRoundFavouriteStatusErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetRoundFavouriteStatusError =
  GetRoundFavouriteStatusErrors[keyof GetRoundFavouriteStatusErrors];

export type GetRoundFavouriteStatusResponses = {
  /**
   * OK
   */
  200: IsFavouritedOutputBody;
};

export type GetRoundFavouriteStatusResponse =
  GetRoundFavouriteStatusResponses[keyof GetRoundFavouriteStatusResponses];

export type GetRoundFavouriteCountData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/rounds/{id}/favourites";
};

export type GetRoundFavouriteCountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetRoundFavouriteCountError =
  GetRoundFavouriteCountErrors[keyof GetRoundFavouriteCountErrors];

export type GetRoundFavouriteCountResponses = {
  /**
   * OK
   */
  200: GetLikeCountOutputBody;
};

export type GetRoundFavouriteCountResponse =
  GetRoundFavouriteCountResponses[keyof GetRoundFavouriteCountResponses];

export type GetRoundImpressionCountData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/analytic/rounds/{id}/impressions";
};

export type GetRoundImpressionCountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetRoundImpressionCountError =
  GetRoundImpressionCountErrors[keyof GetRoundImpressionCountErrors];

export type GetRoundImpressionCountResponses = {
  /**
   * OK
   */
  200: ImpressionCountOutputBody;
};

export type GetRoundImpressionCountResponse =
  GetRoundImpressionCountResponses[keyof GetRoundImpressionCountResponses];

export type CreateBusinessData = {
  body: CreateBusinessParams;
  path?: never;
  query?: never;
  url: "/business";
};

export type CreateBusinessErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateBusinessError =
  CreateBusinessErrors[keyof CreateBusinessErrors];

export type CreateBusinessResponses = {
  /**
   * OK
   */
  200: Business;
};

export type CreateBusinessResponse =
  CreateBusinessResponses[keyof CreateBusinessResponses];

export type GetBusinessStripeAccountData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{businessId}/stripe";
};

export type GetBusinessStripeAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessStripeAccountError =
  GetBusinessStripeAccountErrors[keyof GetBusinessStripeAccountErrors];

export type GetBusinessStripeAccountResponses = {
  /**
   * OK
   */
  200: GetStripeAccountOutputBody;
};

export type GetBusinessStripeAccountResponse =
  GetBusinessStripeAccountResponses[keyof GetBusinessStripeAccountResponses];

export type DeleteBusinessData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{id}";
};

export type DeleteBusinessErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type DeleteBusinessError =
  DeleteBusinessErrors[keyof DeleteBusinessErrors];

export type DeleteBusinessResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type DeleteBusinessResponse =
  DeleteBusinessResponses[keyof DeleteBusinessResponses];

export type GetBusinessByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{id}";
};

export type GetBusinessByIdErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessByIdError =
  GetBusinessByIdErrors[keyof GetBusinessByIdErrors];

export type GetBusinessByIdResponses = {
  /**
   * OK
   */
  200: SingleBusinessResponseBody;
};

export type GetBusinessByIdResponse =
  GetBusinessByIdResponses[keyof GetBusinessByIdResponses];

export type GetBusinessTotalFundingData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{id}/funding";
};

export type GetBusinessTotalFundingErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessTotalFundingError =
  GetBusinessTotalFundingErrors[keyof GetBusinessTotalFundingErrors];

export type GetBusinessTotalFundingResponses = {
  /**
   * OK
   */
  200: FundingOutputBody;
};

export type GetBusinessTotalFundingResponse =
  GetBusinessTotalFundingResponses[keyof GetBusinessTotalFundingResponses];

export type GetBusinessInvestmentsByCursorData = {
  body?: never;
  path: {
    id: number;
  };
  query?: {
    cursor?: number;
    limit?: number;
  };
  url: "/business/{id}/investments";
};

export type GetBusinessInvestmentsByCursorErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessInvestmentsByCursorError =
  GetBusinessInvestmentsByCursorErrors[keyof GetBusinessInvestmentsByCursorErrors];

export type GetBusinessInvestmentsByCursorResponses = {
  /**
   * OK
   */
  200: GetCursorPaginatedInvestmentsOutputBody;
};

export type GetBusinessInvestmentsByCursorResponse =
  GetBusinessInvestmentsByCursorResponses[keyof GetBusinessInvestmentsByCursorResponses];

export type GetBusinessInvestmentsByPageData = {
  body?: never;
  path: {
    id: number;
  };
  query?: {
    page?: number;
    pageSize?: number;
  };
  url: "/business/{id}/investments/page";
};

export type GetBusinessInvestmentsByPageErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessInvestmentsByPageError =
  GetBusinessInvestmentsByPageErrors[keyof GetBusinessInvestmentsByPageErrors];

export type GetBusinessInvestmentsByPageResponses = {
  /**
   * OK
   */
  200: GetOffsetPaginatedInvestmentsOutputBody;
};

export type GetBusinessInvestmentsByPageResponse =
  GetBusinessInvestmentsByPageResponses[keyof GetBusinessInvestmentsByPageResponses];

export type GetBusinessMembersByPageData = {
  body?: never;
  path: {
    id: number;
  };
  query?: {
    page?: number;
    pageSize?: number;
  };
  url: "/business/{id}/members/page";
};

export type GetBusinessMembersByPageErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessMembersByPageError =
  GetBusinessMembersByPageErrors[keyof GetBusinessMembersByPageErrors];

export type GetBusinessMembersByPageResponses = {
  /**
   * OK
   */
  200: GetOffsetPaginatedBusinessMembersOutputBody;
};

export type GetBusinessMembersByPageResponse =
  GetBusinessMembersByPageResponses[keyof GetBusinessMembersByPageResponses];

export type GetBusinessRoundCreateRequirementsData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{id}/requirements/round-create";
};

export type GetBusinessRoundCreateRequirementsErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessRoundCreateRequirementsError =
  GetBusinessRoundCreateRequirementsErrors[keyof GetBusinessRoundCreateRequirementsErrors];

export type GetBusinessRoundCreateRequirementsResponses = {
  /**
   * OK
   */
  200: GetRoundCreateRequirementsOutputBody;
};

export type GetBusinessRoundCreateRequirementsResponse =
  GetBusinessRoundCreateRequirementsResponses[keyof GetBusinessRoundCreateRequirementsResponses];

export type GetBusinessMemberRolesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/business/{id}/roles";
};

export type GetBusinessMemberRolesErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessMemberRolesError =
  GetBusinessMemberRolesErrors[keyof GetBusinessMemberRolesErrors];

export type GetBusinessMemberRolesResponses = {
  /**
   * OK
   */
  200: GetAllMemberRolesOutputBody;
};

export type GetBusinessMemberRolesResponse =
  GetBusinessMemberRolesResponses[keyof GetBusinessMemberRolesResponses];

export type GetBusinessRoundsByCursorData = {
  body?: never;
  path: {
    id: number;
  };
  query?: {
    cursor?: number;
    limit?: number;
  };
  url: "/business/{id}/rounds";
};

export type GetBusinessRoundsByCursorErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessRoundsByCursorError =
  GetBusinessRoundsByCursorErrors[keyof GetBusinessRoundsByCursorErrors];

export type GetBusinessRoundsByCursorResponses = {
  /**
   * OK
   */
  200: GetCursorPaginatedRoundsOutputBody;
};

export type GetBusinessRoundsByCursorResponse =
  GetBusinessRoundsByCursorResponses[keyof GetBusinessRoundsByCursorResponses];

export type GetBusinessRoundsByPageData = {
  body?: never;
  path: {
    id: number;
  };
  query?: {
    page?: number;
    pageSize?: number;
  };
  url: "/business/{id}/rounds/page";
};

export type GetBusinessRoundsByPageErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetBusinessRoundsByPageError =
  GetBusinessRoundsByPageErrors[keyof GetBusinessRoundsByPageErrors];

export type GetBusinessRoundsByPageResponses = {
  /**
   * OK
   */
  200: GetOffsetPaginatedRoundsOutputBody;
};

export type GetBusinessRoundsByPageResponse =
  GetBusinessRoundsByPageResponses[keyof GetBusinessRoundsByPageResponses];

export type UpsertBusinessLegalSectionData = {
  body: UpsertBusinessLegalSectionParams;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{id}/sections/legal";
};

export type UpsertBusinessLegalSectionErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type UpsertBusinessLegalSectionError =
  UpsertBusinessLegalSectionErrors[keyof UpsertBusinessLegalSectionErrors];

export type UpsertBusinessLegalSectionResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type UpsertBusinessLegalSectionResponse =
  UpsertBusinessLegalSectionResponses[keyof UpsertBusinessLegalSectionResponses];

export type GetStripeDashboardUrlData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{id}/stripe-dashboard-url";
};

export type GetStripeDashboardUrlErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetStripeDashboardUrlError =
  GetStripeDashboardUrlErrors[keyof GetStripeDashboardUrlErrors];

export type GetStripeDashboardUrlResponses = {
  /**
   * OK
   */
  200: UrlOutputBody;
};

export type GetStripeDashboardUrlResponse =
  GetStripeDashboardUrlResponses[keyof GetStripeDashboardUrlResponses];

export type OnboardStripeConnectedAccountData = {
  body: OnboardStripeConnectedAccountInputBody;
  path: {
    id: number;
  };
  query?: never;
  url: "/business/{id}/stripe-onboard";
};

export type OnboardStripeConnectedAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type OnboardStripeConnectedAccountError =
  OnboardStripeConnectedAccountErrors[keyof OnboardStripeConnectedAccountErrors];

export type OnboardStripeConnectedAccountResponses = {
  /**
   * OK
   */
  200: UrlOutputBody;
};

export type OnboardStripeConnectedAccountResponse =
  OnboardStripeConnectedAccountResponses[keyof OnboardStripeConnectedAccountResponses];

export type HealthCheckData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/health";
};

export type HealthCheckErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type HealthCheckError = HealthCheckErrors[keyof HealthCheckErrors];

export type HealthCheckResponses = {
  /**
   * OK
   */
  200: MessageResponse;
};

export type HealthCheckResponse =
  HealthCheckResponses[keyof HealthCheckResponses];

export type GetAllIndustriesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/industries";
};

export type GetAllIndustriesErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetAllIndustriesError =
  GetAllIndustriesErrors[keyof GetAllIndustriesErrors];

export type GetAllIndustriesResponses = {
  /**
   * OK
   */
  200: GetAllIndustriesResponseBody;
};

export type GetAllIndustriesResponse =
  GetAllIndustriesResponses[keyof GetAllIndustriesResponses];

export type CreateRoundInvestmentData = {
  body: CreateInvestmentParams;
  path?: never;
  query?: never;
  url: "/investments";
};

export type CreateRoundInvestmentErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateRoundInvestmentError =
  CreateRoundInvestmentErrors[keyof CreateRoundInvestmentErrors];

export type CreateRoundInvestmentResponses = {
  /**
   * OK
   */
  200: SingleInvestmentResponseBody;
};

export type CreateRoundInvestmentResponse =
  CreateRoundInvestmentResponses[keyof CreateRoundInvestmentResponses];

export type GetInvestmentByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/investments/{id}";
};

export type GetInvestmentByIdErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetInvestmentByIdError =
  GetInvestmentByIdErrors[keyof GetInvestmentByIdErrors];

export type GetInvestmentByIdResponses = {
  /**
   * OK
   */
  200: SingleInvestmentResponseBody;
};

export type GetInvestmentByIdResponse =
  GetInvestmentByIdResponses[keyof GetInvestmentByIdResponses];

export type GetInvestmentActivePaymentData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/investments/{id}/pay";
};

export type GetInvestmentActivePaymentErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetInvestmentActivePaymentError =
  GetInvestmentActivePaymentErrors[keyof GetInvestmentActivePaymentErrors];

export type GetInvestmentActivePaymentResponses = {
  /**
   * OK
   */
  200: GetInvestmentActivePaymentOutputBody;
};

export type GetInvestmentActivePaymentResponse =
  GetInvestmentActivePaymentResponses[keyof GetInvestmentActivePaymentResponses];

export type CreateInvestmentPaymentIntentData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/investments/{id}/pay";
};

export type CreateInvestmentPaymentIntentErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateInvestmentPaymentIntentError =
  CreateInvestmentPaymentIntentErrors[keyof CreateInvestmentPaymentIntentErrors];

export type CreateInvestmentPaymentIntentResponses = {
  /**
   * OK
   */
  200: InvestmentPaymentIntentClientSecretOutputBody;
};

export type CreateInvestmentPaymentIntentResponse =
  CreateInvestmentPaymentIntentResponses[keyof CreateInvestmentPaymentIntentResponses];

export type GetInvestmentPaymentsData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/investments/{id}/payments";
};

export type GetInvestmentPaymentsErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetInvestmentPaymentsError =
  GetInvestmentPaymentsErrors[keyof GetInvestmentPaymentsErrors];

export type GetInvestmentPaymentsResponses = {
  /**
   * OK
   */
  200: GetInvestmentPaymentsOutputBody;
};

export type GetInvestmentPaymentsResponse =
  GetInvestmentPaymentsResponses[keyof GetInvestmentPaymentsResponses];

export type GetRoundByCursorData = {
  body?: never;
  path?: never;
  query?: {
    cursor?: number;
    limit?: number;
  };
  url: "/round";
};

export type GetRoundByCursorErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetRoundByCursorError =
  GetRoundByCursorErrors[keyof GetRoundByCursorErrors];

export type GetRoundByCursorResponses = {
  /**
   * OK
   */
  200: GetCursorPaginatedRoundsOutputBody;
};

export type GetRoundByCursorResponse =
  GetRoundByCursorResponses[keyof GetRoundByCursorResponses];

export type CreateRoundData = {
  body: CreateRoundParams;
  path?: never;
  query?: never;
  url: "/round";
};

export type CreateRoundErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateRoundError = CreateRoundErrors[keyof CreateRoundErrors];

export type CreateRoundResponses = {
  /**
   * OK
   */
  200: Round;
};

export type CreateRoundResponse =
  CreateRoundResponses[keyof CreateRoundResponses];

export type GetRoundsByPageData = {
  body?: never;
  path?: never;
  query?: {
    page?: number;
    pageSize?: number;
  };
  url: "/round/page";
};

export type GetRoundsByPageErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetRoundsByPageError =
  GetRoundsByPageErrors[keyof GetRoundsByPageErrors];

export type GetRoundsByPageResponses = {
  /**
   * OK
   */
  200: GetOffsetPaginatedRoundsOutputBody;
};

export type GetRoundsByPageResponse =
  GetRoundsByPageResponses[keyof GetRoundsByPageResponses];

export type DeleteRoundData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/round/{id}";
};

export type DeleteRoundErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type DeleteRoundError = DeleteRoundErrors[keyof DeleteRoundErrors];

export type DeleteRoundResponses = {
  /**
   * No Content
   */
  204: void;
};

export type DeleteRoundResponse =
  DeleteRoundResponses[keyof DeleteRoundResponses];

export type GetRoundByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/round/{id}";
};

export type GetRoundByIdErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetRoundByIdError = GetRoundByIdErrors[keyof GetRoundByIdErrors];

export type GetRoundByIdResponses = {
  /**
   * OK
   */
  200: Round;
};

export type GetRoundByIdResponse =
  GetRoundByIdResponses[keyof GetRoundByIdResponses];
