// This file is auto-generated by @hey-api/openapi-ts

export type Account = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  created_at: string;
  email: string;
  first_name: string;
  id: number;
  last_name: string;
  updated_at: string | null;
  user_id: string;
};

export type CreateAccountParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  email: string;
  first_name: string;
  last_name: string;
};

export type CreateLinkTokenUrlRequestBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  email: string;
  name: string;
};

export type CreateLinkTokenUrlResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  url: string;
};

export type CreateMergeLinkedAccountParams = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  /**
   * Email address of the linked account
   */
  email: string;
  /**
   * Merge.dev unique identifier
   */
  merge_id: string;
  /**
   * Name of the linked account
   */
  name: string;
};

export type ErrorDetail = {
  /**
   * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
   */
  location?: string;
  /**
   * Error message text
   */
  message?: string;
  /**
   * The value at the given location
   */
  value?: unknown;
};

export type ErrorModel = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  /**
   * A human-readable explanation specific to this occurrence of the problem.
   */
  detail?: string;
  /**
   * Optional list of individual error details
   */
  errors?: Array<ErrorDetail> | null;
  /**
   * A URI reference that identifies the specific occurrence of the problem.
   */
  instance?: string;
  /**
   * HTTP status code
   */
  status?: number;
  /**
   * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
   */
  title?: string;
  /**
   * A URI reference to human-readable documentation for the error.
   */
  type?: string;
};

export type MergeLinkedAccount = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  created_at: string;
  /**
   * Email address of the linked account
   */
  email: string;
  /**
   * Unique identifier for the linked account
   */
  id: number;
  /**
   * Merge.dev unique identifier
   */
  merge_id: string;
  /**
   * Name of the linked account
   */
  name: string;
  /**
   * ID of the account owner
   */
  owner_id: number;
  updated_at: string | null;
};

export type MessageResponseBody = {
  /**
   * A URL to the JSON Schema for this object.
   */
  readonly $schema?: string;
  message: string;
};

export type MinimalMergeLinkedAccount = {
  /**
   * Email address of the linked account
   */
  email: string;
  /**
   * Unique identifier for the linked account
   */
  id: number;
  /**
   * Name of the linked account
   */
  name: string;
};

export type GetAccountData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/account";
};

export type GetAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetAccountError = GetAccountErrors[keyof GetAccountErrors];

export type GetAccountResponses = {
  /**
   * OK
   */
  200: Account;
};

export type GetAccountResponse = GetAccountResponses[keyof GetAccountResponses];

export type CreateAccountData = {
  body: CreateAccountParams;
  path?: never;
  query?: never;
  url: "/account";
};

export type CreateAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateAccountError = CreateAccountErrors[keyof CreateAccountErrors];

export type CreateAccountResponses = {
  /**
   * OK
   */
  200: MessageResponseBody;
};

export type CreateAccountResponse =
  CreateAccountResponses[keyof CreateAccountResponses];

export type HealthCheckData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/health";
};

export type HealthCheckErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type HealthCheckError = HealthCheckErrors[keyof HealthCheckErrors];

export type HealthCheckResponses = {
  /**
   * OK
   */
  200: MessageResponseBody;
};

export type HealthCheckResponse =
  HealthCheckResponses[keyof HealthCheckResponses];

export type CreateMergeLinkTokenUrlData = {
  body: CreateLinkTokenUrlRequestBody;
  path?: never;
  query?: never;
  url: "/merge/link-token-url";
};

export type CreateMergeLinkTokenUrlErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateMergeLinkTokenUrlError =
  CreateMergeLinkTokenUrlErrors[keyof CreateMergeLinkTokenUrlErrors];

export type CreateMergeLinkTokenUrlResponses = {
  /**
   * OK
   */
  200: CreateLinkTokenUrlResponseBody;
};

export type CreateMergeLinkTokenUrlResponse =
  CreateMergeLinkTokenUrlResponses[keyof CreateMergeLinkTokenUrlResponses];

export type GetLinkedAccountsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/merge/linked-accounts";
};

export type GetLinkedAccountsErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetLinkedAccountsError =
  GetLinkedAccountsErrors[keyof GetLinkedAccountsErrors];

export type GetLinkedAccountsResponses = {
  /**
   * OK
   */
  200: Array<MergeLinkedAccount> | null;
};

export type GetLinkedAccountsResponse =
  GetLinkedAccountsResponses[keyof GetLinkedAccountsResponses];

export type CreateLinkedAccountData = {
  body: CreateMergeLinkedAccountParams;
  path?: never;
  query?: never;
  url: "/merge/linked-accounts";
};

export type CreateLinkedAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type CreateLinkedAccountError =
  CreateLinkedAccountErrors[keyof CreateLinkedAccountErrors];

export type CreateLinkedAccountResponses = {
  /**
   * OK
   */
  200: MessageResponseBody;
};

export type CreateLinkedAccountResponse =
  CreateLinkedAccountResponses[keyof CreateLinkedAccountResponses];

export type GetLinkedAccountByMergeIdData = {
  body?: never;
  path: {
    mergeId: string;
  };
  query?: never;
  url: "/merge/linked-accounts/merge/{mergeId}";
};

export type GetLinkedAccountByMergeIdErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetLinkedAccountByMergeIdError =
  GetLinkedAccountByMergeIdErrors[keyof GetLinkedAccountByMergeIdErrors];

export type GetLinkedAccountByMergeIdResponses = {
  /**
   * OK
   */
  200: MergeLinkedAccount;
};

export type GetLinkedAccountByMergeIdResponse =
  GetLinkedAccountByMergeIdResponses[keyof GetLinkedAccountByMergeIdResponses];

export type GetLinkedAccountsMinimalData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/merge/linked-accounts/minimal";
};

export type GetLinkedAccountsMinimalErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetLinkedAccountsMinimalError =
  GetLinkedAccountsMinimalErrors[keyof GetLinkedAccountsMinimalErrors];

export type GetLinkedAccountsMinimalResponses = {
  /**
   * OK
   */
  200: Array<MinimalMergeLinkedAccount> | null;
};

export type GetLinkedAccountsMinimalResponse =
  GetLinkedAccountsMinimalResponses[keyof GetLinkedAccountsMinimalResponses];

export type DeleteLinkedAccountData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/merge/linked-accounts/{id}";
};

export type DeleteLinkedAccountErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type DeleteLinkedAccountError =
  DeleteLinkedAccountErrors[keyof DeleteLinkedAccountErrors];

export type DeleteLinkedAccountResponses = {
  /**
   * OK
   */
  200: MessageResponseBody;
};

export type DeleteLinkedAccountResponse =
  DeleteLinkedAccountResponses[keyof DeleteLinkedAccountResponses];

export type GetLinkedAccountByIdData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: "/merge/linked-accounts/{id}";
};

export type GetLinkedAccountByIdErrors = {
  /**
   * Error
   */
  default: ErrorModel;
};

export type GetLinkedAccountByIdError =
  GetLinkedAccountByIdErrors[keyof GetLinkedAccountByIdErrors];

export type GetLinkedAccountByIdResponses = {
  /**
   * OK
   */
  200: MergeLinkedAccount;
};

export type GetLinkedAccountByIdResponse =
  GetLinkedAccountByIdResponses[keyof GetLinkedAccountByIdResponses];
