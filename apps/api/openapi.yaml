components:
  schemas:
    Account:
      additionalProperties: false
      properties:
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        first_name:
          maxLength: 30
          minLength: 3
          pattern: ^[a-zA-Z]+$
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        last_name:
          maxLength: 30
          minLength: 3
          pattern: ^[a-zA-Z]+$
          type: string
        updated_at:
          format: date-time
          nullable: true
          type: string
        user_id:
          minimum: 1
          type: string
      required:
        - user_id
        - id
        - first_name
        - last_name
        - created_at
        - updated_at
        - deleted_at
      type: object
    Business:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/Business.json
          format: uri
          readOnly: true
          type: string
        business_legal_section:
          $ref: "#/components/schemas/BusinessLegalSection"
        business_legal_section_id:
          format: int64
          minimum: 1
          nullable: true
          type: integer
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        display_name:
          minLength: 1
          type: string
        employee_count:
          enum:
            - "1"
            - 2-10
            - 11-50
            - 51-200
            - 201-500
            - 501-1000
            - 1000+
          type: string
        founding_date:
          format: date-time
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        industries:
          items:
            $ref: "#/components/schemas/Industry"
          nullable: true
          type: array
        stripe_account:
          $ref: "#/components/schemas/BusinessStripeAccount"
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - stripe_account
        - business_legal_section
        - display_name
        - founding_date
        - industries
        - id
        - created_at
        - updated_at
        - deleted_at
      type: object
    BusinessLegalSection:
      additionalProperties: false
      properties:
        business_number:
          type: string
        created_at:
          format: date-time
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - business_number
        - id
        - created_at
        - updated_at
      type: object
    BusinessMemberRole:
      additionalProperties: false
      properties:
        description:
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        name:
          type: string
        permissions:
          items:
            $ref: "#/components/schemas/RolePermission"
          nullable: true
          type: array
      required:
        - name
        - description
        - permissions
        - id
      type: object
    BusinessMemberWithRoleNameAndAccount:
      additionalProperties: false
      properties:
        account:
          $ref: "#/components/schemas/SafeAccount"
        account_id:
          format: int64
          type: integer
        business_id:
          format: int64
          type: integer
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        role:
          type: string
        role_id:
          format: int64
          type: integer
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - role
        - account
        - business_id
        - account_id
        - role_id
        - created_at
        - updated_at
        - deleted_at
      type: object
    BusinessParams:
      additionalProperties: false
      properties:
        display_name:
          example: Acme Inc.
          minLength: 1
          type: string
        employee_count:
          enum:
            - "1"
            - 2-10
            - 11-50
            - 51-200
            - 201-500
            - 501-1000
            - 1000+
          type: string
        founding_date:
          format: date-time
          type: string
      required:
        - display_name
        - founding_date
        - employee_count
      type: object
    BusinessStripeAccount:
      additionalProperties: false
      properties:
        business_id:
          format: int64
          minimum: 1
          type: integer
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        stripe_connected_account_id:
          type: string
        stripe_disabled_reason:
          nullable: true
          type: string
        stripe_payouts_enabled:
          type: boolean
        stripe_transfers_enabled:
          type: boolean
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - business_id
        - stripe_connected_account_id
        - stripe_disabled_reason
        - stripe_transfers_enabled
        - stripe_payouts_enabled
        - created_at
        - updated_at
        - deleted_at
      type: object
    CreateAccountParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/CreateAccountParams.json
          format: uri
          readOnly: true
          type: string
        first_name:
          maxLength: 30
          minLength: 3
          pattern: ^[a-zA-Z]+$
          type: string
        last_name:
          maxLength: 30
          minLength: 3
          pattern: ^[a-zA-Z]+$
          type: string
      required:
        - first_name
        - last_name
      type: object
    CreateBusinessParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/CreateBusinessParams.json
          format: uri
          readOnly: true
          type: string
        business:
          $ref: "#/components/schemas/BusinessParams"
        industry_ids:
          example:
            - 1
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      required:
        - business
      type: object
    CreateInvestmentParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/CreateInvestmentParams.json
          format: uri
          readOnly: true
          type: string
        investment:
          $ref: "#/components/schemas/CreateInvestmentParamsInvestmentStruct"
        terms_acceptance:
          $ref: "#/components/schemas/CreateRoundTermsAcceptanceParams"
      required:
        - investment
        - terms_acceptance
      type: object
    CreateInvestmentParamsInvestmentStruct:
      additionalProperties: false
      properties:
        round_id:
          format: int64
          minimum: 1
          type: integer
        share_quantity:
          format: int64
          minimum: 1
          type: integer
      required:
        - round_id
        - share_quantity
      type: object
    CreateRoundParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/CreateRoundParams.json
          format: uri
          readOnly: true
          type: string
        round:
          $ref: "#/components/schemas/CreateRoundParamsRoundStruct"
        terms:
          $ref: "#/components/schemas/CreateRoundTermParams"
      required:
        - round
        - terms
      type: object
    CreateRoundParamsRoundStruct:
      additionalProperties: false
      properties:
        business_id:
          format: int64
          minimum: 1
          type: integer
        description:
          maxLength: 3000
          minLength: 10
          type: string
        price_per_share_usd_cents:
          example: 23
          format: int64
          minimum: 1
          type: integer
        total_business_shares:
          example: 100000
          format: int64
          minimum: 1
          type: integer
        total_shares_for_sale:
          example: 1000
          format: int64
          minimum: 1
          type: integer
      required:
        - business_id
        - price_per_share_usd_cents
        - total_shares_for_sale
        - total_business_shares
        - description
      type: object
    CreateRoundTermParams:
      additionalProperties: false
      properties:
        content:
          maxLength: 3000
          minLength: 10
          type: string
      required:
        - content
      type: object
    CreateRoundTermsAcceptanceParams:
      additionalProperties: false
      properties:
        accepted_at:
          format: date-time
          type: string
        ip_address:
          maxLength: 45
          minLength: 1
          type: string
        terms_id:
          format: int64
          minimum: 1
          type: integer
        user_agent:
          maxLength: 500
          minLength: 1
          type: string
      required:
        - terms_id
        - accepted_at
        - ip_address
        - user_agent
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/ErrorModel.json
          format: uri
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          nullable: true
          type: array
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          example: https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          example: 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          example: Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          example: https://example.com/errors/example
          format: uri
          type: string
      type: object
    GetAllIndustriesResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetAllIndustriesResponseBody.json
          format: uri
          readOnly: true
          type: string
        industries:
          items:
            $ref: "#/components/schemas/Industry"
          nullable: true
          type: array
        message:
          type: string
      required:
        - industries
        - message
      type: object
    GetAllMemberRolesOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetAllMemberRolesOutputBody.json
          format: uri
          readOnly: true
          type: string
        message:
          type: string
        roles:
          items:
            $ref: "#/components/schemas/BusinessMemberRole"
          nullable: true
          type: array
      required:
        - roles
        - message
      type: object
    GetBusinessesOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetBusinessesOutputBody.json
          format: uri
          readOnly: true
          type: string
        businesses:
          items:
            $ref: "#/components/schemas/Business"
          nullable: true
          type: array
        message:
          type: string
      required:
        - businesses
        - message
      type: object
    GetCursorPaginatedRoundsOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetCursorPaginatedRoundsOutputBody.json
          format: uri
          readOnly: true
          type: string
        hasMore:
          type: boolean
        message:
          type: string
        nextCursor:
          format: int64
          nullable: true
          type: integer
        rounds:
          items:
            $ref: "#/components/schemas/Round"
          nullable: true
          type: array
      required:
        - rounds
        - message
        - nextCursor
        - hasMore
      type: object
    GetInvestmentActivePaymentOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetInvestmentActivePaymentOutputBody.json
          format: uri
          readOnly: true
          type: string
        investment_payment:
          $ref: "#/components/schemas/Payment"
        message:
          type: string
      required:
        - investment_payment
        - message
      type: object
    GetInvestmentPaymentIntentClientSecretInputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetInvestmentPaymentIntentClientSecretInputBody.json
          format: uri
          readOnly: true
          type: string
        confirmation_token:
          type: string
        return_url:
          type: string
      required:
        - confirmation_token
        - return_url
      type: object
    GetInvestmentPaymentsOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetInvestmentPaymentsOutputBody.json
          format: uri
          readOnly: true
          type: string
        investment_payments:
          items:
            $ref: "#/components/schemas/Payment"
          nullable: true
          type: array
        message:
          type: string
      required:
        - investment_payments
        - message
      type: object
    GetInvestmentsResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetInvestmentsResponseBody.json
          format: uri
          readOnly: true
          type: string
        investments:
          items:
            $ref: "#/components/schemas/Investment"
          nullable: true
          type: array
        next_cursor:
          format: int64
          nullable: true
          type: integer
      required:
        - investments
        - next_cursor
      type: object
    GetOffsetPaginatedBusinessMembersOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetOffsetPaginatedBusinessMembersOutputBody.json
          format: uri
          readOnly: true
          type: string
        hasMore:
          type: boolean
        members:
          items:
            $ref: "#/components/schemas/BusinessMemberWithRoleNameAndAccount"
          nullable: true
          type: array
        message:
          type: string
        total:
          format: int64
          type: integer
      required:
        - members
        - message
        - hasMore
        - total
      type: object
    GetOffsetPaginatedRoundsOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetOffsetPaginatedRoundsOutputBody.json
          format: uri
          readOnly: true
          type: string
        hasMore:
          type: boolean
        message:
          type: string
        rounds:
          items:
            $ref: "#/components/schemas/Round"
          nullable: true
          type: array
        total:
          format: int64
          type: integer
      required:
        - rounds
        - message
        - hasMore
        - total
      type: object
    GetRoundCreateRequirementsOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetRoundCreateRequirementsOutputBody.json
          format: uri
          readOnly: true
          type: string
        message:
          type: string
        requirements:
          $ref: "#/components/schemas/RoundCreateRequirements"
      required:
        - requirements
        - message
      type: object
    GetStripeAccountOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetStripeAccountOutputBody.json
          format: uri
          readOnly: true
          type: string
        message:
          type: string
        stripeAccount:
          $ref: "#/components/schemas/BusinessStripeAccount"
      required:
        - stripeAccount
        - message
      type: object
    GetStripeIdentityVerificationSessionURLInputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetStripeIdentityVerificationSessionURLInputBody.json
          format: uri
          readOnly: true
          type: string
        return_url:
          default: https://fundlevel.app
          type: string
      required:
        - return_url
      type: object
    Industry:
      additionalProperties: false
      properties:
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        label:
          maxLength: 30
          minLength: 3
          type: string
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - id
        - label
        - created_at
        - updated_at
        - deleted_at
      type: object
    Investment:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/Investment.json
          format: uri
          readOnly: true
          type: string
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        investor_id:
          format: int64
          minimum: 1
          type: integer
        round_id:
          format: int64
          minimum: 1
          type: integer
        share_quantity:
          format: int64
          minimum: 1
          type: integer
        status:
          enum:
            - awaiting_confirmation
            - awaiting_payment
            - payment_completed
            - completed
            - round_closed
          type: string
        terms_acceptance_id:
          format: int64
          minimum: 1
          type: integer
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - round_id
        - share_quantity
        - terms_acceptance_id
        - investor_id
        - status
        - id
        - created_at
        - updated_at
        - deleted_at
      type: object
    InvestmentFilter:
      additionalProperties: false
      properties:
        statuses:
          items:
            enum:
              - awaiting_confirmation
              - awaiting_payment
              - payment_completed
              - completed
              - round_closed
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      required:
        - statuses
      type: object
    MessageResponse:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/MessageResponse.json
          format: uri
          readOnly: true
          type: string
        message:
          type: string
      required:
        - message
      type: object
    Payment:
      additionalProperties: false
      properties:
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        investment_id:
          format: int64
          minimum: 1
          type: integer
        status:
          enum:
            - cancelled
            - processing
            - requires_action
            - requires_capture
            - requires_confirmation
            - requires_payment_method
            - succeeded
          type: string
        stripe_payment_intent_client_secret:
          type: string
        stripe_payment_intent_id:
          type: string
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - investment_id
        - status
        - stripe_payment_intent_id
        - stripe_payment_intent_client_secret
        - id
        - created_at
        - updated_at
        - deleted_at
      type: object
    RolePermission:
      additionalProperties: false
      properties:
        description:
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        value:
          type: string
      required:
        - value
        - description
        - id
      type: object
    Round:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/Round.json
          format: uri
          readOnly: true
          type: string
        business_id:
          format: int64
          minimum: 1
          type: integer
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        description:
          maxLength: 3000
          minLength: 10
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        price_per_share_usd_cents:
          format: int64
          minimum: 1
          type: integer
        status:
          enum:
            - active
            - successful
            - failed
          type: string
        terms_id:
          format: int64
          minimum: 1
          type: integer
        total_business_shares:
          format: int64
          minimum: 1
          type: integer
        total_shares_for_sale:
          format: int64
          minimum: 1
          type: integer
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - business_id
        - price_per_share_usd_cents
        - total_shares_for_sale
        - total_business_shares
        - terms_id
        - status
        - description
        - id
        - created_at
        - updated_at
        - deleted_at
      type: object
    RoundCreateRequirements:
      additionalProperties: false
      properties:
        has_active_status:
          type: boolean
        legal_section:
          type: boolean
        stripe_account:
          type: boolean
      required:
        - has_active_status
        - legal_section
        - stripe_account
      type: object
    RoundTerm:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/RoundTerm.json
          format: uri
          readOnly: true
          type: string
        content:
          maxLength: 3000
          minLength: 10
          type: string
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - content
        - id
        - created_at
        - updated_at
        - deleted_at
      type: object
    SafeAccount:
      additionalProperties: false
      properties:
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          nullable: true
          type: string
        first_name:
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        last_name:
          type: string
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - first_name
        - last_name
        - id
        - created_at
        - updated_at
        - deleted_at
      type: object
    SingleAccountResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/SingleAccountResponseBody.json
          format: uri
          readOnly: true
          type: string
        account:
          $ref: "#/components/schemas/Account"
        message:
          type: string
      required:
        - account
        - message
      type: object
    SingleBusinessResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/SingleBusinessResponseBody.json
          format: uri
          readOnly: true
          type: string
        business:
          $ref: "#/components/schemas/Business"
        message:
          type: string
      required:
        - business
        - message
      type: object
    SingleInvestmentResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/SingleInvestmentResponseBody.json
          format: uri
          readOnly: true
          type: string
        investment:
          $ref: "#/components/schemas/Investment"
        message:
          type: string
      required:
        - investment
        - message
      type: object
    StripeIdentity:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/StripeIdentity.json
          format: uri
          readOnly: true
          type: string
        account_id:
          format: int64
          minimum: 1
          type: integer
        created_at:
          format: date-time
          type: string
        remote_id:
          minimum: 1
          type: string
        status:
          enum:
            - verified
            - canceled
          type: string
        updated_at:
          format: date-time
          nullable: true
          type: string
      required:
        - account_id
        - status
        - remote_id
        - created_at
        - updated_at
      type: object
    StripePaymentIntentOutput:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/StripePaymentIntentOutput.json
          format: uri
          readOnly: true
          type: string
        client_secret:
          type: string
        status:
          enum:
            - requires_payment_method
            - requires_confirmation
            - requires_action
            - processing
            - requires_capture
            - canceled
            - succeeded
          type: string
      required:
        - status
        - client_secret
      type: object
    StripeSessionOutput:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/StripeSessionOutput.json
          format: uri
          readOnly: true
          type: string
        client_secret:
          type: string
        url:
          type: string
      required:
        - client_secret
        - url
      type: object
    URLOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/URLOutputBody.json
          format: uri
          readOnly: true
          type: string
        url:
          type: string
      required:
        - url
      type: object
    UpdateAccountParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/UpdateAccountParams.json
          format: uri
          readOnly: true
          type: string
        first_name:
          maxLength: 30
          minLength: 3
          pattern: ^[a-zA-Z]+$
          type: string
        last_name:
          maxLength: 30
          minLength: 3
          pattern: ^[a-zA-Z]+$
          type: string
      required:
        - first_name
        - last_name
      type: object
    UpsertBusinessLegalSectionParams:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/UpsertBusinessLegalSectionParams.json
          format: uri
          readOnly: true
          type: string
        business_number:
          maxLength: 10
          minLength: 1
          type: string
      required:
        - business_number
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  title: ""
  version: ""
openapi: 3.0.3
paths:
  /account:
    get:
      description: Fetches the account for the currently authenticated user.
      operationId: getAccount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleAccountResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get account by user id
      tags:
        - Accounts
    post:
      description: Create a account.
      operationId: create-account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountParams"
        required: true
      responses:
        "201":
          description: Created
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Create a account
      tags:
        - Accounts
  /account/investments:
    get:
      description: Get investments for the currently authenticated account.
      operationId: get-account-investments
      parameters:
        - explode: false
          in: query
          name: cursor
          schema:
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: limit
          schema:
            default: 10
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: filter
          schema:
            $ref: "#/components/schemas/InvestmentFilter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInvestmentsResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get investments
      tags:
        - Accounts
        - Investments
  /account/stripe-identity:
    get:
      description: Get stripe identity for the currently authenticated account.
      operationId: get-stripe-identity
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StripeIdentity"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get stripe identity
      tags:
        - Accounts
        - Stripe
    post:
      description: Get stripe identity verification session url for the currently authenticated account.
      operationId: get-stripe-identity-verification-session-url
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetStripeIdentityVerificationSessionURLInputBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StripeSessionOutput"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get stripe identity verification session url
      tags:
        - Accounts
        - Stripe
  /account/{id}:
    delete:
      description: Delete a account.
      operationId: delete-account
      responses:
        "204":
          description: No Content
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Delete a account
      tags:
        - Accounts
    put:
      description: Update a account.
      operationId: update-account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountParams"
        required: true
      responses:
        "204":
          description: No Content
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Update a account
      tags:
        - Accounts
  /account/{id}/businesses:
    get:
      description: Get businesses.
      operationId: get-account-businesses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBusinessesOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get businesses
      tags:
        - Accounts
        - Businesses
  /business:
    post:
      description: Create a business.
      operationId: create-business
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBusinessParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Business"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Create a business
      tags:
        - Businesses
  /business/{id}:
    delete:
      description: Delete a business.
      operationId: delete-business
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Delete a business
      tags:
        - Businesses
    get:
      description: Get business by ID.
      operationId: get-business-by-id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleBusinessResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get business by ID
      tags:
        - Businesses
  /business/{id}/members/page:
    get:
      description: Get business members.
      operationId: get-business-members-by-page
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: page
          schema:
            default: 1
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: pageSize
          schema:
            default: 10
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOffsetPaginatedBusinessMembersOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get business members
      tags:
        - Businesses
        - Members
  /business/{id}/requirements/round-create:
    get:
      description: Get round create requirements.
      operationId: get-business-round-create-requirements
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoundCreateRequirementsOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get round create requirements
      tags:
        - Businesses
        - Rounds
  /business/{id}/roles:
    get:
      description: Get all the roles created for this business.
      operationId: get-business-member-roles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllMemberRolesOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get business member roles
      tags:
        - Businesses
        - Members
  /business/{id}/rounds:
    get:
      description: Get rounds.
      operationId: get-business-rounds-by-cursor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: cursor
          schema:
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: limit
          schema:
            default: 10
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCursorPaginatedRoundsOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get rounds
      tags:
        - Businesses
        - Rounds
  /business/{id}/rounds/page:
    get:
      description: Get rounds.
      operationId: get-business-rounds-by-page
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: page
          schema:
            default: 1
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: pageSize
          schema:
            default: 10
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOffsetPaginatedRoundsOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get rounds
      tags:
        - Businesses
        - Rounds
  /business/{id}/sections/legal:
    put:
      description: Upsert business legal section.
      operationId: upsert-business-legal-section
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertBusinessLegalSectionParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Upsert business legal section
      tags:
        - Businesses
        - Legal Section
  /business/{id}/stripe:
    get:
      description: Get business stripe account.
      operationId: get-business-stripe-account
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStripeAccountOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get business stripe account
      tags:
        - Businesses
  /business/{id}/stripe-dashboard-url:
    get:
      description: Get Stripe dashboard url.
      operationId: get-stripe-dashboard-url
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URLOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get Stripe dashboard url
      tags:
        - Businesses
  /business/{id}/stripe-onboard:
    get:
      description: Onboard Stripe connected account.
      operationId: onboard-stripe-connected-account
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: returnURL
          schema:
            default: https://fundlevel.app
            type: string
        - explode: false
          in: query
          name: refreshURL
          schema:
            default: https://fundlevel.app
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/URLOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Onboard Stripe connected account
      tags:
        - Businesses
  /health:
    get:
      description: Health check.
      operationId: health-check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Health check
      tags:
        - Health
  /industries:
    get:
      description: Get all industries.
      operationId: get-all-industries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllIndustriesResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get all industries
      tags:
        - Industries
  /investments:
    post:
      description: Create a round investment.
      operationId: create-round-investment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInvestmentParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Investment"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Create a round investment
      tags:
        - Investments
  /investments/{id}:
    get:
      description: Get a round investment.
      operationId: get-investment-by-id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleInvestmentResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get a round investment
      tags:
        - Investments
  /investments/{id}/confirm-payment:
    post:
      description: Confirm a stripe payment intent for an investment.
      operationId: confirm-investment-payment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInvestmentPaymentIntentClientSecretInputBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StripePaymentIntentOutput"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Confirm a stripe payment intent
      tags:
        - Investments
  /investments/{id}/pay:
    get:
      description: Get the payment for the current investment that is either processing or succeeded.
      operationId: get-investment-active-payment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInvestmentActivePaymentOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get the active payment for an investment
      tags:
        - Investments
  /investments/{id}/payments:
    get:
      description: Get a round investment payments.
      operationId: get-investment-payments
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInvestmentPaymentsOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Get a round investment payments
      tags:
        - Investments
  /round:
    get:
      description: Get rounds by cursor.
      operationId: get-round-by-cursor
      parameters:
        - explode: false
          in: query
          name: cursor
          schema:
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: limit
          schema:
            default: 10
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCursorPaginatedRoundsOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get rounds by cursor
      tags:
        - Round
    post:
      description: Create a round.
      operationId: create-round
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoundParams"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Round"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Create a round
      tags:
        - Round
  /round/page:
    get:
      description: Get rounds by page.
      operationId: get-rounds-by-page
      parameters:
        - explode: false
          in: query
          name: page
          schema:
            default: 1
            format: int64
            minimum: 1
            type: integer
        - explode: false
          in: query
          name: pageSize
          schema:
            default: 10
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOffsetPaginatedRoundsOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get rounds by page
      tags:
        - Round
  /round/terms/{id}:
    get:
      description: Get round terms.
      operationId: get-round-terms
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoundTerm"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get round terms
      tags:
        - Round
  /round/{id}:
    delete:
      description: Delete a round.
      operationId: delete-round
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "204":
          description: No Content
          headers:
            Message:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      security:
        - bearerAuth: []
      summary: Delete a round
      tags:
        - Round
    get:
      description: Get round by ID.
      operationId: get-round-by-id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Round"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get round by ID
      tags:
        - Round
  /webhook/stripe:
    post:
      description: Handle a stripe webhook.
      operationId: handle-stripe-webhook
      parameters:
        - in: header
          name: Stripe-Signature
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: {}
        required: true
      responses:
        "204":
          description: No Content
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Handle a stripe webhook
      tags:
        - Webhook
  /webhook/stripe-connect:
    post:
      description: Handle a stripe connect webhook.
      operationId: handle-stripe-connect-webhook
      parameters:
        - in: header
          name: Stripe-Signature
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: {}
        required: true
      responses:
        "204":
          description: No Content
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Handle a stripe connect webhook
      tags:
        - Webhook
