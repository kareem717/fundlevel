// This file is auto-generated by @hey-api/openapi-ts

export const AccountSchema = {
    additionalProperties: false,
    properties: {
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        deletedAt: {
            format: 'date-time',
            type: ['string', 'null']
        },
        id: {
            format: 'int64',
            type: 'integer'
        },
        name: {
            type: 'string'
        },
        updatedAt: {
            format: 'date-time',
            type: ['string', 'null']
        },
        userId: {
            format: 'uuid',
            maxLength: 36,
            minLength: 36,
            type: 'string'
        }
    },
    required: ['id', 'userId', 'name', 'createdAt', 'updatedAt', 'deletedAt'],
    type: 'object'
} as const;

export const CreateAccountParamsSchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/CreateAccountParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        },
        userId: {
            format: 'uuid',
            maxLength: 36,
            minLength: 36,
            type: 'string'
        }
    },
    required: ['name', 'userId'],
    type: 'object'
} as const;

export const CreateFooParamsSchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/CreateFooParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        }
    },
    required: ['name'],
    type: 'object'
} as const;

export const ErrorDetailSchema = {
    additionalProperties: false,
    properties: {
        location: {
            type: 'string'
        },
        message: {
            type: 'string'
        },
        value: {}
    },
    type: 'object'
} as const;

export const ErrorModelSchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/ErrorModel.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        detail: {
            examples: ['Property foo is required but is missing.'],
            type: 'string'
        },
        errors: {
            items: {
                '$ref': '#/components/schemas/ErrorDetail'
            },
            type: ['array', 'null']
        },
        instance: {
            examples: ['https://example.com/error-log/abc123'],
            format: 'uri',
            type: 'string'
        },
        status: {
            examples: [400],
            format: 'int64',
            type: 'integer'
        },
        title: {
            examples: ['Bad Request'],
            type: 'string'
        },
        type: {
            default: 'about:blank',
            examples: ['https://example.com/errors/example'],
            format: 'uri',
            type: 'string'
        }
    },
    type: 'object'
} as const;

export const FooSchema = {
    additionalProperties: false,
    properties: {
        createdAt: {
            format: 'date-time',
            type: 'string'
        },
        deletedAt: {
            format: 'date-time',
            type: ['string', 'null']
        },
        id: {
            format: 'int64',
            type: 'integer'
        },
        name: {
            type: 'string'
        },
        updatedAt: {
            format: 'date-time',
            type: ['string', 'null']
        }
    },
    required: ['id', 'name', 'createdAt', 'updatedAt', 'deletedAt'],
    type: 'object'
} as const;

export const GetAllFooOutputBodySchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/GetAllFooOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        foos: {
            items: {
                '$ref': '#/components/schemas/Foo'
            },
            type: ['array', 'null']
        },
        hasMore: {
            type: 'boolean'
        },
        message: {
            type: 'string'
        },
        nextCursor: {
            format: 'int64',
            type: ['integer', 'null']
        }
    },
    required: ['foos', 'message', 'nextCursor', 'hasMore'],
    type: 'object'
} as const;

export const MessageResponseSchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/MessageResponse.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        message: {
            type: 'string'
        }
    },
    required: ['message'],
    type: 'object'
} as const;

export const SingleAccountResponseBodySchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/SingleAccountResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        account: {
            '$ref': '#/components/schemas/Account'
        },
        message: {
            type: 'string'
        }
    },
    required: ['account', 'message'],
    type: 'object'
} as const;

export const SingleFooResponseBodySchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/SingleFooResponseBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        foo: {
            '$ref': '#/components/schemas/Foo'
        },
        message: {
            type: 'string'
        }
    },
    required: ['foo', 'message'],
    type: 'object'
} as const;

export const UpdateAccountParamsSchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/UpdateAccountParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        }
    },
    required: ['name'],
    type: 'object'
} as const;

export const UpdateFooParamsSchema = {
    additionalProperties: false,
    properties: {
        '$schema': {
            examples: ['https://example.com/schemas/UpdateFooParams.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        name: {
            type: 'string'
        }
    },
    required: ['name'],
    type: 'object'
} as const;