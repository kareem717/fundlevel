/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/_dashboard/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as homeIndexRouteImport } from './routes/(home)/index'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as AuthSignOutRouteImport } from './routes/_auth/sign-out'
import { Route as AuthSignInRouteImport } from './routes/_auth/sign-in'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const homeIndexRoute = homeIndexRouteImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthSignOutRoute = AuthSignOutRouteImport.update({
  id: '/sign-out',
  path: '/sign-out',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof AuthSignInRoute
  '/sign-out': typeof AuthSignOutRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/': typeof homeIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof AuthSignInRoute
  '/sign-out': typeof AuthSignOutRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/': typeof homeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-out': typeof AuthSignOutRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/(home)/': typeof homeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sign-in' | '/sign-out' | '/dashboard' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/sign-out' | '/dashboard' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/_dashboard'
    | '/_auth/sign-in'
    | '/_auth/sign-out'
    | '/_dashboard/dashboard'
    | '/(home)/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  homeIndexRoute: typeof homeIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_auth/sign-out': {
      id: '/_auth/sign-out'
      path: '/sign-out'
      fullPath: '/sign-out'
      preLoaderRoute: typeof AuthSignOutRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignOutRoute: typeof AuthSignOutRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignOutRoute: AuthSignOutRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  homeIndexRoute: homeIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
