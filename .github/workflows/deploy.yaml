name: Deploy Web Apps

on:
  push:
    branches:
      - main

jobs:
  deploy-landing:
    name: Deploy Landing Page to Cloudflare Workers
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Landing App Dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
            cd apps/landing
            pnpm run deploy --env=production --config wrangler.jsonc

  deploy-web:
    name: Deploy Web App to Cloudflare Workers
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Web App Dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
            cd apps/web
            pnpm run deploy --env=production --config wrangler.jsonc

  deploy-docs:
    name: Deploy Docs to Cloudflare Workers
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Docs Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Docs
        env:
          NODE_ENV: production
        run: |
          cd apps/docs
          pnpm run build

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          environment: production
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: 'apps/docs'
          command: deploy --minify --config wrangler.jsonc

  deploy-server:
    name: Deploy Server to Cloudflare Workers
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Server Dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }} 
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          NANGO_SECRET_KEY: ${{ secrets.NANGO_SECRET_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          environment: production
          secrets: |
            DATABASE_URL
            BETTER_AUTH_SECRET
            GOOGLE_CLIENT_ID
            GOOGLE_CLIENT_SECRET
            NANGO_SECRET_KEY
            SENTRY_DSN
          workingDirectory: 'apps/server'
          command: deploy --minify --config wrangler.jsonc